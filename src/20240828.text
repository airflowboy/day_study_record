컨테이너 기술?

컨테이너는 애플리케이션을 언제든 실행 가능하도록 필요한 모든 요소를
하나의 런타임 환경으로 패키징한 논리적 공간

    - 이러한 패키징 기술을 docker에서는 Dockerfile build를 통해 구현

애플리케이션과 종속 항목을 하나로 묶어, 실행하게 해주는 운영시스템을
가상화한 경량의 격리(== 방화벽(보안))된 프로세스라고 볼 수 있다.

    - microVM 이라고도 함
    - 운영체제 수준의 가상화 제공
    - 독립성을 갖기 때문에 다른 컨테이너에 영향을 주지 않는 stateless 환경 제공


컨테이너 기술은 무엇인가?

이 기술은 개인 데스크탑 뿐만 아니라 기업 내의 온프레미스 서버에서 AWS와 같은 퍼블릭
클라우드까지 언제 어디서든 빠르고 효율적으로 배포 가능하며, 확장성 또한 가지고 있다.

이를 통해 서버구성, OS설치, 네트워크, 개발도구 구성 등의 반복적이고 불편한 작업에 시간을
낭비하지 않고 개발자는 애플리케이션 개발 그 자체에 집중할 수 있게 된다.


컨테이너 특징은?

컨테이너는 우리가 개발한 최소한의 Image를 통해 실행되므로 경량이다.
    - 컨테이너 이미지 생성의 Best Practice 중 하나는 이미지 경량화다.

일반 서버 환경에서의 애플리케이션 실행과 달리 언제든 프로세스 수준의 속도로 빠르게
실행(run) 할 수 있고, 한번에 여러 개의 컨테이너를 동시에 실행 가능하다.
    - Docker에서는 docker compose 기술을 통해 구현한다.

개인 환경이던 클라우드 환경이던 어떤 OS, 어떤 환경에서도 동작 가능한 이식성을
보유하고 있다.

컨테이너 자체 애플리케이션 환경에 대한 관리만 요구되므로, 지속적 서버관리 비용을 절감
할 수 있다.

개발팀과 운영팀의 업무 분리로 각자의 업무와 세분화된 관리에 집중할 수 있다. 즉,
컨테이너는 DevOps workflow 구성에 최적이다. (CI/CD)